=====
inipp
=====
:Homepage: http://projects.wagner-flo.net/inipp/
:Author: Florian Wagner <florian@wagner-flo.net>
:Release: v0.1
:License: BSD 2-clause

About
=====
inipp is a minimalistic ini style config parser for C++. It is contained
in a single header file which can be added to a programs source code. It
is intended for tools that need to read and parse (but not write) ini
style files and do not want to add a dependency to one of the more
advanced config parsing libraries.

Installation and Dependencies
=============================
Copy the ``inipp.hh`` header to a directory of your choice within the
sources of the software you intend to use inipp with. Compilation
requires a C++ standard library with basic stream and string support
and a C++ compiler able to compile said standard library and one
additional class.

Example usage
=============
To read a config file create an instance of the *inipp::inifile* class
and pass it an *std::ifstream* object::
 
 #include "inipp.hh"
 #include <fstream>

 [...]

 std::ifstream cfstream("tests-sunshine.conf");
 inipp::inifile cfile(cfstream);

The constructor of *inipp::inifile* will read the given stream line
by line and parse it contents according to a set of rules:

1. Empty lines, lines with only whitespace in them and lines starting a
   ``#`` character (and possibly whitespace before that) are completely
   ignored.

2. Lines starting with a ``[`` character and ending with a ``]``
   (ignoring whitespace before and after) are taken as starting
   definitions of sections. Section names are trimmed (``[a]`` is
   equal to ``[␣a␣]``). A missing closing braket makes *inipp*
   throw a *inipp::syntax_error*.

3. Lines containing a ``=`` character and some none whitespace text
   before and after that character are assumed to be key, value
   pairs and are added to the current section. Whitespace next to
   the equal sign is trimmed. Splitting is done on the first ``=``
   found in the line, thus all following equal signs end up in the
   value part.

4. Lines matching non of the previous conditions make *inipp*
   throw a *initpp::syntax_error*.

Assuming a configuration file named ``tests-sunshine.conf`` with the
following content::

 # this is a comment with a = sign
 
 everything = borked
 inipp = may not be borked
 
 [rule the world]
 use lolcats = en masse
 
 [sp3c14|_ c#4r4c73r2]
 do = work in inipp
 
   [   whitespace aplenty   ]
   these are double = = signs

Querying all these key, value pairs is as easy as calling the *get*
method on the *inipp::inifile* object::

 std::cout << "everything: " << cfile.get("everything")
           << std::endl
           << "inipp: " << cfile.get("inipp")
           << std::endl
           << "rule the world / use: "
                  << cfile.get("rule the world", "use lolcats")
           << std::endl
           << "sp3c14|_ c#4r4c73r2 / do: "
                  << cfile.get("sp3c14|_ c#4r4c73r2", "do")
           << std::endl
           << "whitespace aplenty / these are double: "
                  << cfile.get("whitespace aplenty", "these are double")
           << std::endl;

This will print the following five lines to stdout::

 everything: borked
 inipp: may not be borked
 rule the world / use: en masse
 sp3c14|_ c#4r4c73r2 / do: work in inipp
 whitespace aplenty / these are double: = signs

..
   Local Variables:
   mode: rst
   End:
